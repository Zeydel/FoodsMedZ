//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API_Reciever.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recipe", Namespace="http://schemas.datacontract.org/2004/07/FoodService")]
    [System.SerializableAttribute()]
    public partial class Recipe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private API_Reciever.ServiceReference1.Ingredients[] IngredientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstructionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Recipe_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Recipe_minutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Recipe_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Recipe_vegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Recipe_veganField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> cheapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> dairyfreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> glutenfreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageTypField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> sustainableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public API_Reciever.ServiceReference1.Ingredients[] Ingredients {
            get {
                return this.IngredientsField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientsField, value) != true)) {
                    this.IngredientsField = value;
                    this.RaisePropertyChanged("Ingredients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instructions {
            get {
                return this.InstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionsField, value) != true)) {
                    this.InstructionsField = value;
                    this.RaisePropertyChanged("Instructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Recipe_id {
            get {
                return this.Recipe_idField;
            }
            set {
                if ((this.Recipe_idField.Equals(value) != true)) {
                    this.Recipe_idField = value;
                    this.RaisePropertyChanged("Recipe_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Recipe_minutes {
            get {
                return this.Recipe_minutesField;
            }
            set {
                if ((this.Recipe_minutesField.Equals(value) != true)) {
                    this.Recipe_minutesField = value;
                    this.RaisePropertyChanged("Recipe_minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipe_name {
            get {
                return this.Recipe_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Recipe_nameField, value) != true)) {
                    this.Recipe_nameField = value;
                    this.RaisePropertyChanged("Recipe_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Recipe_veg {
            get {
                return this.Recipe_vegField;
            }
            set {
                if ((this.Recipe_vegField.Equals(value) != true)) {
                    this.Recipe_vegField = value;
                    this.RaisePropertyChanged("Recipe_veg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Recipe_vegan {
            get {
                return this.Recipe_veganField;
            }
            set {
                if ((this.Recipe_veganField.Equals(value) != true)) {
                    this.Recipe_veganField = value;
                    this.RaisePropertyChanged("Recipe_vegan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> cheap {
            get {
                return this.cheapField;
            }
            set {
                if ((this.cheapField.Equals(value) != true)) {
                    this.cheapField = value;
                    this.RaisePropertyChanged("cheap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> dairyfree {
            get {
                return this.dairyfreeField;
            }
            set {
                if ((this.dairyfreeField.Equals(value) != true)) {
                    this.dairyfreeField = value;
                    this.RaisePropertyChanged("dairyfree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> glutenfree {
            get {
                return this.glutenfreeField;
            }
            set {
                if ((this.glutenfreeField.Equals(value) != true)) {
                    this.glutenfreeField = value;
                    this.RaisePropertyChanged("glutenfree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image {
            get {
                return this.imageField;
            }
            set {
                if ((object.ReferenceEquals(this.imageField, value) != true)) {
                    this.imageField = value;
                    this.RaisePropertyChanged("image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imageTyp {
            get {
                return this.imageTypField;
            }
            set {
                if ((object.ReferenceEquals(this.imageTypField, value) != true)) {
                    this.imageTypField = value;
                    this.RaisePropertyChanged("imageTyp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> sustainable {
            get {
                return this.sustainableField;
            }
            set {
                if ((this.sustainableField.Equals(value) != true)) {
                    this.sustainableField = value;
                    this.RaisePropertyChanged("sustainable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ingredients", Namespace="http://schemas.datacontract.org/2004/07/FoodService")]
    [System.SerializableAttribute()]
    public partial class Ingredients : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Ingredient_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Ingredient_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private API_Reciever.ServiceReference1.Recipe RecipeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Recipe_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ingredient_id {
            get {
                return this.Ingredient_idField;
            }
            set {
                if ((this.Ingredient_idField.Equals(value) != true)) {
                    this.Ingredient_idField = value;
                    this.RaisePropertyChanged("Ingredient_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ingredient_name {
            get {
                return this.Ingredient_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Ingredient_nameField, value) != true)) {
                    this.Ingredient_nameField = value;
                    this.RaisePropertyChanged("Ingredient_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public API_Reciever.ServiceReference1.Recipe Recipe {
            get {
                return this.RecipeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipeField, value) != true)) {
                    this.RecipeField = value;
                    this.RaisePropertyChanged("Recipe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Recipe_id {
            get {
                return this.Recipe_idField;
            }
            set {
                if ((this.Recipe_idField.Equals(value) != true)) {
                    this.Recipe_idField = value;
                    this.RaisePropertyChanged("Recipe_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRecipeService1")]
    public interface IRecipeService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/getRecipe", ReplyAction="http://tempuri.org/IRecipeService1/getRecipeResponse")]
        API_Reciever.ServiceReference1.Recipe getRecipe(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/getRecipe", ReplyAction="http://tempuri.org/IRecipeService1/getRecipeResponse")]
        System.Threading.Tasks.Task<API_Reciever.ServiceReference1.Recipe> getRecipeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/addRecipe", ReplyAction="http://tempuri.org/IRecipeService1/addRecipeResponse")]
        void addRecipe(int recipe_id, string recipe_name, int recipe_minutes, bool recipe_veg, bool recipe_vegan, bool cheap, bool sustainable, bool glutenfree, bool dairyfree, string image, string instruction, string imageTyp, API_Reciever.ServiceReference1.Ingredients[] ingredientList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/addRecipe", ReplyAction="http://tempuri.org/IRecipeService1/addRecipeResponse")]
        System.Threading.Tasks.Task addRecipeAsync(int recipe_id, string recipe_name, int recipe_minutes, bool recipe_veg, bool recipe_vegan, bool cheap, bool sustainable, bool glutenfree, bool dairyfree, string image, string instruction, string imageTyp, API_Reciever.ServiceReference1.Ingredients[] ingredientList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/findRecipesByName", ReplyAction="http://tempuri.org/IRecipeService1/findRecipesByNameResponse")]
        string findRecipesByName(string recipe_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/findRecipesByName", ReplyAction="http://tempuri.org/IRecipeService1/findRecipesByNameResponse")]
        System.Threading.Tasks.Task<string> findRecipesByNameAsync(string recipe_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/findRecipesById", ReplyAction="http://tempuri.org/IRecipeService1/findRecipesByIdResponse")]
        string findRecipesById(int recipe_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/findRecipesById", ReplyAction="http://tempuri.org/IRecipeService1/findRecipesByIdResponse")]
        System.Threading.Tasks.Task<string> findRecipesByIdAsync(int recipe_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/getAllRecipes", ReplyAction="http://tempuri.org/IRecipeService1/getAllRecipesResponse")]
        string getAllRecipes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/getAllRecipes", ReplyAction="http://tempuri.org/IRecipeService1/getAllRecipesResponse")]
        System.Threading.Tasks.Task<string> getAllRecipesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/getRecipesAdvanced", ReplyAction="http://tempuri.org/IRecipeService1/getRecipesAdvancedResponse")]
        string getRecipesAdvanced(string searchTerm, bool vegetarian, bool vegan, bool cheap, bool glutenfree, bool dairyfree, int maxminues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService1/getRecipesAdvanced", ReplyAction="http://tempuri.org/IRecipeService1/getRecipesAdvancedResponse")]
        System.Threading.Tasks.Task<string> getRecipesAdvancedAsync(string searchTerm, bool vegetarian, bool vegan, bool cheap, bool glutenfree, bool dairyfree, int maxminues);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecipeService1Channel : API_Reciever.ServiceReference1.IRecipeService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecipeService1Client : System.ServiceModel.ClientBase<API_Reciever.ServiceReference1.IRecipeService1>, API_Reciever.ServiceReference1.IRecipeService1 {
        
        public RecipeService1Client() {
        }
        
        public RecipeService1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecipeService1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecipeService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecipeService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public API_Reciever.ServiceReference1.Recipe getRecipe(int id) {
            return base.Channel.getRecipe(id);
        }
        
        public System.Threading.Tasks.Task<API_Reciever.ServiceReference1.Recipe> getRecipeAsync(int id) {
            return base.Channel.getRecipeAsync(id);
        }
        
        public void addRecipe(int recipe_id, string recipe_name, int recipe_minutes, bool recipe_veg, bool recipe_vegan, bool cheap, bool sustainable, bool glutenfree, bool dairyfree, string image, string instruction, string imageTyp, API_Reciever.ServiceReference1.Ingredients[] ingredientList) {
            base.Channel.addRecipe(recipe_id, recipe_name, recipe_minutes, recipe_veg, recipe_vegan, cheap, sustainable, glutenfree, dairyfree, image, instruction, imageTyp, ingredientList);
        }
        
        public System.Threading.Tasks.Task addRecipeAsync(int recipe_id, string recipe_name, int recipe_minutes, bool recipe_veg, bool recipe_vegan, bool cheap, bool sustainable, bool glutenfree, bool dairyfree, string image, string instruction, string imageTyp, API_Reciever.ServiceReference1.Ingredients[] ingredientList) {
            return base.Channel.addRecipeAsync(recipe_id, recipe_name, recipe_minutes, recipe_veg, recipe_vegan, cheap, sustainable, glutenfree, dairyfree, image, instruction, imageTyp, ingredientList);
        }
        
        public string findRecipesByName(string recipe_name) {
            return base.Channel.findRecipesByName(recipe_name);
        }
        
        public System.Threading.Tasks.Task<string> findRecipesByNameAsync(string recipe_name) {
            return base.Channel.findRecipesByNameAsync(recipe_name);
        }
        
        public string findRecipesById(int recipe_id) {
            return base.Channel.findRecipesById(recipe_id);
        }
        
        public System.Threading.Tasks.Task<string> findRecipesByIdAsync(int recipe_id) {
            return base.Channel.findRecipesByIdAsync(recipe_id);
        }
        
        public string getAllRecipes() {
            return base.Channel.getAllRecipes();
        }
        
        public System.Threading.Tasks.Task<string> getAllRecipesAsync() {
            return base.Channel.getAllRecipesAsync();
        }
        
        public string getRecipesAdvanced(string searchTerm, bool vegetarian, bool vegan, bool cheap, bool glutenfree, bool dairyfree, int maxminues) {
            return base.Channel.getRecipesAdvanced(searchTerm, vegetarian, vegan, cheap, glutenfree, dairyfree, maxminues);
        }
        
        public System.Threading.Tasks.Task<string> getRecipesAdvancedAsync(string searchTerm, bool vegetarian, bool vegan, bool cheap, bool glutenfree, bool dairyfree, int maxminues) {
            return base.Channel.getRecipesAdvancedAsync(searchTerm, vegetarian, vegan, cheap, glutenfree, dairyfree, maxminues);
        }
    }
}
